
spring:
  application:
    name: eduplatform-backend
    version: ${APP_VERSION:0.0.1-SNAPSHOT}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}

  # ===== DOCKER COMPOSE CONFIGURATION =====
  # Disable Docker Compose integration for containerized applications
  docker:
    compose:
      enabled: false

  # ===== DATABASE CONFIGURATION - ENHANCED =====
  datasource:
    # Fixed: Added default values for all environment variables
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:eduplatform_db}
    username: ${DB_USERNAME:eduplatform_user}
    password: ${DB_PASSWORD:eduplatform_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 20
      minimum-idle: 5
      auto-commit: false 
      pool-name: EduPlatformHikariPool
      # ADDED: Connection validation for better reliability
      connection-test-query: SELECT 1
      validation-timeout: 5000
      leak-detection-threshold: 60000

  # ===== JPA CONFIGURATION - CORRECTED =====
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate # Let Flyway handle schema changes
      naming:
        # CORRECTED: Fixed class name - added missing 's' in 'Underscores'
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true

  # ===== FLYWAY MIGRATION - SIMPLIFIED =====
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    # FIXED: Removed duplicate URL configuration - Flyway inherits from datasource

  # ===== REDIS CONFIGURATION - ENHANCED =====
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      database: ${REDIS_DATABASE:0}
      lettuce:
        pool:
          max-active: 16
          max-wait: -1ms
          max-idle: 8
          min-idle: 2
          time-between-eviction-runs: 60s

  # ===== CACHE CONFIGURATION =====
  cache:
    type: redis
    redis:
      time-to-live: 3600s
      key-prefix: "eduplatform::"
      cache-null-values: false

  # ===== JACKSON JSON CONFIGURATION =====
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"

  # ===== WEB CONFIGURATION =====
  web:
    locale: en_US
    locale-resolver: fixed

  # ===== FILE UPLOAD CONFIGURATION =====
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
      enabled: true
      file-size-threshold: 2KB

  # ===== MAIL CONFIGURATION =====
  mail:
    host: ${SMTP_HOST:mailpit}
    port: ${SMTP_PORT:1025}
    username: ${SMTP_USERNAME:}
    password: ${SMTP_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
          timeout: 8000
          connectiontimeout: 8000
          writetimeout: 8000

  # ===== SECURITY CONFIGURATION =====
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}

# ===== SERVER CONFIGURATION =====
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# ===== MANAGEMENT/ACTUATOR CONFIGURATION =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,flyway,env,mappings
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true
    build:
      enabled: true
    git:
      enabled: true

# ===== LOGGING CONFIGURATION =====
logging:
  level:
    com.eduplatform: ${LOG_LEVEL:DEBUG}
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: ${SQL_LOG_LEVEL:INFO}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_LOG_LEVEL:INFO}
    org.flywaydb: INFO
    org.springframework.data.redis: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/eduplatform-backend.log
    max-size: 100MB
    max-history: 30

# ===== APPLICATION SPECIFIC CONFIGURATION - FIXED =====
app:
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:your-secret-key-here-must-be-at-least-256-bits-long-for-security-purposes}
    expiration-ms: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
    refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days in milliseconds
    issuer: ${JWT_ISSUER:eduplatform}

  # MFA Configuration (FIXED INDENTATION)
  mfa:
    enabled: ${MFA_ENABLED:false}

  # API Configuration (MERGED - NO DUPLICATES)
  api:
    version: v1
    base-path: /api/v1
    rate-limit:
      enabled: true
      requests-per-minute: 100

  # File Upload Configuration (ENHANCED)
  upload:
    directory: ${UPLOAD_DIR:./uploads}
    max-file-size: ${MAX_FILE_SIZE:10485760} # 10MB
    allowed-extensions: jpg,jpeg,png,gif,pdf,doc,docx,txt,mp4,mov,avi
    virus-scan-enabled: ${VIRUS_SCAN_ENABLED:false}

  # CORS Configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:80}
    allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
    allowed-headers: "*"
    exposed-headers: "Authorization,Content-Disposition"
    allow-credentials: true
    max-age: 3600

  # Frontend URL for email links
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}

  # Email Configuration
  email:
    from: ${EMAIL_FROM:noreply@eduplatform.com}
    from-name: ${EMAIL_FROM_NAME:EduPlatform}

  # Pagination Configuration
  pagination:
    default-size: 20
    max-size: 100

  # File Configuration
  file:
    max-profile-picture-size: ${MAX_PROFILE_PICTURE_SIZE:2097152} # 2MB
    max-course-material-size: ${MAX_COURSE_MATERIAL_SIZE:10485760} # 10MB

# ===== MINIO CONFIGURATION =====
minio:
  endpoint: ${S3_ENDPOINT:http://minio:9000}
  access-key: ${AWS_ACCESS_KEY_ID:minioadmin}
  secret-key: ${AWS_SECRET_ACCESS_KEY:minioadmin}
  bucket:
    name: ${MINIO_BUCKET_NAME:eduplatform-uploads}

---
# ===== DEVELOPMENT ENVIRONMENT =====
spring:
  config:
    activate:
      on-profile: development

  # Docker Compose enabled for development (optional)
  docker:
    compose:
      enabled: ${DOCKER_COMPOSE_ENABLED:false}
      file: ${DOCKER_COMPOSE_FILE:./docker-compose.yml}
      lifecycle-management: start-and-stop
      skip:
        in-tests: true

  # Development Database Settings
  datasource:
    url: jdbc:postgresql://postgres:5432/eduplatform_db
    username: eduplatform_user
    password: eduplatform_password

  # Development JPA Settings - FIXED
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update  # CHANGED: This will auto-create missing columns
    properties:
      hibernate:
        format_sql: true

  # Development Cache (use Redis but with shorter TTL)
  cache:
    redis:
      time-to-live: 300s # 5 minutes in development

  # Development Mail (Mailpit)
  mail:
    host: mailpit
    port: 1025
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
---
# ===== TEST ENVIRONMENT =====
spring:
  config:
    activate:
      on-profile: test

  # Disable Docker Compose for tests
  docker:
    compose:
      enabled: false

  # Test Database (H2 in-memory)
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:

  # Test JPA Settings
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop

  # Disable Flyway for tests (use JPA to create schema)
  flyway:
    enabled: false

  # Test Cache (simple in-memory)
  cache:
    type: simple

  # Test Mail (no-op)
  mail:
    host: localhost
    port: 25

# Test Logging (minimal)
logging:
  level:
    com.eduplatform: INFO
    org.hibernate.SQL: WARN
    org.springframework.web: WARN

---
# ===== PRODUCTION ENVIRONMENT =====
spring:
  config:
    activate:
      on-profile: production

  # Disable Docker Compose for production (always)
  docker:
    compose:
      enabled: false

  # Production JPA Settings (optimized)
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 50

  # Production Cache (Redis with longer TTL)
  cache:
    redis:
      time-to-live: 7200s # 2 hours in production

# Production Logging (less verbose)
logging:
  level:
    com.eduplatform: INFO
    org.hibernate.SQL: WARN
    org.springframework.web: WARN
    org.springframework.security: INFO

# Production Security (strict CORS)
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://yourdomain.com}

  # Production JWT (standard expiration)
  jwt:
    expiration-ms: 3600000 # 1 hour in production

server:
  servlet:
    session:
      cookie:
        http-only: true
        secure: true
        same-site: strict

# ===== ALTERNATIVE NAMING STRATEGIES (COMMENTED) =====
# If you want to use different naming strategies, uncomment one of these:

# Option 1: Use Hibernate's default (no naming strategy transformation)
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Option 2: Remove the naming strategy entirely (Spring Boot 3 defaults)
# Just remove the physical-strategy line completely - Spring Boot will use its defaults

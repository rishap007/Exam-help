# Full Dev Environment (EduPlatform)
# The top-level 'version' key has been removed as it is obsolete.

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eduplatform_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: eduplatform_db
      POSTGRES_USER: eduplatform_user
      POSTGRES_PASSWORD: eduplatform_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eduplatform_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eduplatform_user -d eduplatform_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: eduplatform_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eduplatform_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: eduplatform_backend
    restart: unless-stopped
    environment:
      # Increased timeout for first-time Gradle download
      - GRADLE_OPTS=-Dorg.gradle.internal.http.socketTimeout=60000
      # Database Configuration - FIXED: Added missing variables
      - SPRING_PROFILES_ACTIVE=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=eduplatform_db
      - DB_USERNAME=eduplatform_user
      - DB_PASSWORD=eduplatform_password
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # MinIO/S3 Configuration
      - S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin123
      # Email Configuration
      - SMTP_HOST=mailpit
      - SMTP_PORT=1025
    ports:
      - "8080:8080"
      - "5005:5005" # Exposing port for remote debugging
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mailpit:
        condition: service_started
    networks:
      - eduplatform_network

  # MinIO (S3 replacement)
  minio:
    image: minio/minio:latest
    container_name: eduplatform_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Web UI
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - eduplatform_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mailpit (Email testing)
  mailpit:
    image: axllent/mailpit:latest
    container_name: eduplatform_mailpit
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - eduplatform_network

  # PgAdmin (DB Admin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: eduplatform_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@eduplatform.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - eduplatform_network

  # Redis Commander (Redis Admin)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: eduplatform_redis_admin
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - eduplatform_network

# Networks
networks:
  eduplatform_network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
  redis_data:
  minio_data:
